# enable Docker for your repository
options:
  docker: true

definitions:
  steps:
    - step: &build-building-render-image
        name: Build Building Render Docker image
        image: adoptopenjdk/openjdk11:jre-11.0.9_11.1-alpine
        script:
          - apk add --no-cache openssh-client bash
          - docker build -t building_render  .
          - docker save --output tmp-image.docker building_render
        artifacts:
          - tmp-image.docker

    - step: &deploy-cloudrun
        name: Build - Push - Deploy to GCP (gcr.io/extreme-arch-347212/building_render) for Building Render
        image: google/cloud-sdk:latest
        caches:
          - docker
        deployment: test
        script:
          - docker load --input ./tmp-image.docker
          # set image name
          - export IMAGE_NAME='gcr.io/extreme-arch-347212/building_render'
          - export SERVICE_NAME='building-render'
          - export PROJECT_NAME='extreme-arch-347212'
          - export PORT_VAR=8000
          # Tag image
          - docker tag building_render ${IMAGE_NAME}

          # Gcloud auth and check
          - gcloud auth activate-service-account --key-file extreme-arch-ws.json
          - gcloud config list

          # config image registry with gcloud helper
          - gcloud auth configure-docker -q

          # push image to gcr
          - docker push $IMAGE_NAME

          # deploy to cloud run
          - gcloud run deploy $SERVICE_NAME --image $IMAGE_NAME --region us-central1 --project $PROJECT_NAME --port $PORT_VAR --allow-unauthenticated

          - echo "ALL DONE DEPLOYMENT HAS BEEN SUCCEDED"

    
pipelines:
  tags:
    v*:
      - step: *build-building-render-image

  default:
    - step: *build-building-render-image
    - step: *deploy-cloudrun

  branches:
    master:
      - step: *build-building-render-image
      - step: *deploy-cloudrun
